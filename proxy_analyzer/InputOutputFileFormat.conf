#
# Input and Output Log format. It MUST be correct Perl script.
#
# This is mandatory file
#
# REGEXP key contains log line regular expression with field names instead of actual field data
# FIELDS contains hash of fields' regexps with field names as keys (field names MUST be the same as
# 		in REGEXP
# Output contains array ref to output log format in desired order, again field names MUST be the same
# 		as in REGEXP
# OUTPUT contains actual output line. The main idea in having Output and OUTPUT is that in OUTPUT you can
# 		specify whatever delimiter you wan between any fields pair
#
#
#
%ParserCfg::Proclog = (
	REGEXP => '^USER_IP\tUSER_LOGIN\tUSER_AGENT\t[^\t]+\tLOCAL_TIME\t[^\t]+\t[^\t]+\tREFERRER\tDOMAIN\tSITE_IP\tPORT\t[^\t]+\tBYTESOUT\tBYTESIN\tPROTOCOL\tTRANSPORT\tMETHOD\tURL\tCONTENTTYPE\t[^\t]+\tHTTP_CODE\t[^\t]+\t[^\t]+\t[^\t]+\t[^\t]+\t[^\t]+\t[^\t]+\tACTION\tGMT_TIME',
	FIELDS => {
		USER_IP => '\d+',         #0
		USER_LOGIN => '[^\t]+',   #1
		USER_AGENT => '[^\t]+',   #2
		LOCAL_TIME => '[^\t]+',   #4
		REFERRER => '[^\t]+',     #7
		DOMAIN => '[^\t]+',       #8
		SITE_IP => '\d+',         #9
		PORT => '\d+',            #10
		BYTESOUT => '\d+',        #12
		BYTESIN => '\d+',         #13
		PROTOCOL => '[^\t]+',     #14
		TRANSPORT => '[^\t]+',    #15
		METHOD => '[^\t]+',       #16
		URL => '[^\t]+',          #17
		CONTENTTYPE => '[^\t]+',  #18
		HTTP_CODE => '\d+',       #20
		ACTION => '[^\t]+',       #27
		GMT_TIME => '[^\t]+',     #28
	},
	Output => [
		qw/USER_LOGIN USER_IP USER_AGENT LOCAL_TIME REFERRER DOMAIN SITE_IP PORT BYTESOUT BYTESIN PROTOCOL TRANSPORT METHOD URL CONTENTTYPE HTTP_CODE ACTION GMT_TIME/
	],
	
	OUTPUT => "USER_LOGIN\tUSER_IP\tUSER_AGENT\tLOCAL_TIME\tREFERRER\tDOMAIN\tSITE_IP\tPORT\tBYTESOUT\tBYTESIN\tPROTOCOL\tTRANSPORT\tMETHOD\tURL\tCONTENTTYPE\tHTTP_CODE\tACTION\tGMT_TIME",

);


