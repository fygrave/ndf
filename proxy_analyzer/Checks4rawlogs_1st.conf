#
# This is checks config for logs processor. It must be correct Perl script as executed with do().
# For each field in output here defined an array for checks. Each check is specified with hash
# which contains the following keys:
# DATA_FILE - file with list of matched tockens. If DATA_FILE is undefined (the same as '' or "")
#    the whole check hash does not work. So if you need to switch check off just comment DATA_FILE
#    key.
# SUCCESS_RETURN - addendum (will be added) to line score in case of success 
#    match (if we use list search with --list option). 
# FUNC - how to perform matching
# - Now the following functions are implemented:
# -- ListSearch - just exact match in list, case sensative
# 		DATA_FILE contains just list for exact matching.
# -- IPListSearch - check if IP is in subnet. Subnet must be in addr/mask notation only.
# 		DATA_FILE contains list of IP addresses or subnets, examples: 12.23.34.45 or 13.234.45.192/26
# -- RegexpSearch - PCRE regexp matching.
# 		DATA_FILE contains list of PCRE regular expressions to match against log data in desired field
# -- DomsinSearch:level - domain search. `:level' is optional suffix specified the domain 
# 		level to check. It it's omited the level of 3 is used by default. This actually means
# 		that if checkin' domain is `da.rfct.rtg.vdws.msk.ru' and the used level is 4 we use
# 		sample `rtg.vdws.msk.ru' to test. If in this field there is IP-address in dotted 
# 		notation (i.g. 10.11.12.13) exect match is performed.
#
# Possible keys of %ParserCfg::Checks (see InputOutputFileFormat.conf):
# USER_LOGIN USER_IP USER_AGENT LOCAL_TIME REFERRER DOMAIN SITE_IP PORT BYTESOUT BYTESIN PROTOCOL
# TRANSPORT METHOD URL CONTENTTYPE HTTP_CODE ACTION GMT_TIME
# 
# This file is mandatory, but specified with --list paramenter for each run. No defaults specified.
#

%ParserCfg::Checks = ( #Keys must match Output fields in %ParserCfg::Proclog
	DOMAIN => [ # Array of checks for DOMAIN field
		{ # Check 1
			DATA_FILE => "alexa_adopted.txt",     # Data to match against
			SUCCESS_RETURN => 301,                # If match success what to add
			FUNC => "ListSearch",                 # How to perform match
		},
		{ # Check 2 ...
			DATA_FILE => "rn_list_alexa.txt", 
			SUCCESS_RETURN => 10, #WhiteList
			FUNC => "ListSearch",
		},
		{
			DATA_FILE => "", 
			SUCCESS_RETURN => -101, #BlackList
			FUNC => "ListSearch",
		},
		{
			DATA_FILE => "domain_list.txt", 
			SUCCESS_RETURN => -401, #ExpBlackList
			FUNC => "DomainSearch:3", #2 - level to search, defult - 3
		},

	],
	
	URL => [
		{
			DATA_FILE => "blacklist.txt",
			SUCCESS_RETURN => -1000, #ExpBlackList
			FUNC => "RegexpSearch",
		},
	],
	SITE_IP => [
		{
			DATA_FILE => "",
			SUCCESS_RETURN => 301, #ExpWhiteList
			FUNC => "IPListSearch",
		},
		{
			DATA_FILE => "kadry.txt",
			SUCCESS_RETURN => 10, #WhiteList
			FUNC => "IPListSearch",
		},
		{
			DATA_FILE => "blacklist_ip.txt",
			SUCCESS_RETURN => -80, #BlackList
			FUNC => "IPListSearch",
		},
		{
			DATA_FILE => "",
			SUCCESS_RETURN => -111, #ExpBlackList
			FUNC => "IPListSearch",
		},
		
	],
	PORT => [
		{
			DATA_FILE => "wl_ports.txt",
			SUCCESS_RETURN => 1, #WhiteList
			FUNC => "ListSearch",
		},
	],
	
);
